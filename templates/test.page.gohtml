{{template "base"}}

{{define "content"}}
	<div class="container">
		<div class="row">
			<div class="col">
				<h1 class="mt-4">Design Patterns in Go</h1>
				<hr>
				<h3>Factory</h3>
				<a href="javascript:void(0);" id="dog-factory-btn" class="btn btn-outline-secondary">Get a dog from factory</a>
				<a href="javascript:void(0);" id="cat-factory-btn" class="btn btn-outline-secondary">Get a cat from factory</a>
			</div>
			<div class="mt-2" style="outline: 1px solid silver; padding: 2em;">
				<pre id="dog-factory-output">
					<span class="text-muted">Nothing received yet...</span>
				</pre>
			</div>
			<hr class="mt-4">

			<h3 class="mt-3">Abstract Factory</h3>
			<div>
				<a href="javascript:void(0);" id="dog-abstract-factory-btn" class="btn btn-outline-secondary">Get a dog from abstract factory</a>
				<a href="javascript:void(0);" id="cat-abstract-factory-btn" class="btn btn-outline-secondary">Get a cat from abstract factory</a>
			</div>
			<div class="mt-2" style="outline: 1px solid silver; padding: 2em;">
				<pre id="abstract-factory-output">
					<span class="text-muted">Nothing received yet...</span>
				</pre>
			</div>

			<hr class="mt-4">

			<h3 class="mt-3">Builder</h3>
			<div>
				<a href="javascript:void(0);" id="dog-builder-btn" class="btn btn-outline-secondary">Build a dog</a>
				<a href="javascript:void(0);" id="cat-builder-btn" class="btn btn-outline-secondary">Build a cat</a>
			</div>
			<div class="mt-2" style="outline: 1px solid silver; padding: 2em;">
				<pre id="builder-output">
					<span class="text-muted">Nothing received yet...</span>
				</pre>
			</div>
		</div>
	</div>
{{end}}

{{define "js"}}
	<script>
		// wait until the document loads to add event listeners and variables to prevent levels of overloading
		document.addEventListener("DOMContentLoaded", function(event) {
			let dogFactoryButton = document.getElementById("dog-factory-btn");
			let catFactoryButton = document.getElementById("cat-factory-btn");
			let dogFactoryOutput = document.getElementById("dog-factory-output");
			let dogBuilderButton = document.getElementById("dog-builder-btn");
			let catBuilderButton = document.getElementById("cat-builder-btn");
			let builderOutput 	 = document.getElementById("builder-output");

			let dogAbstractFactoryButton = document.getElementById("dog-abstract-factory-btn");
			let catAbstractFactoryButton = document.getElementById("cat-abstract-factory-btn");

			let abstractOutput = document.getElementById("abstract-factory-output");

			dogFactoryButton.addEventListener("click", function() {
				fetch("/api/dog-from-factory", {method: "get"})
						.then(response => response.json())
						.then((data) => {
							if(data.error) {
								dogFactoryOutput.innerHTML = data.error;
							} else {
								dogFactoryOutput.innerHTML = JSON.stringify(data, undefined, 4);
							}
						})
			});

			catFactoryButton.addEventListener("click", function() {
				fetch("/api/cat-from-factory", {method: "get"})
						.then(response => response.json())
						.then((data) => {
							if(data.error) {
								dogFactoryOutput.innerHTML = data.error;
							} else {
								dogFactoryOutput.innerHTML = JSON.stringify(data, undefined, 4);
							}
						})
			});

			dogAbstractFactoryButton.addEventListener("click", function() {
				fetch("/api/dog-from-abstract-factory", {method: "get"})
						.then(response => response.json())
						.then((data) => {
							if(data.error) {
								abstractOutput.innerHTML = data.error;
							} else {
								abstractOutput.innerHTML = JSON.stringify(data, undefined, 4);
							}
						})
			});

			catAbstractFactoryButton.addEventListener("click", function() {
				fetch("/api/cat-from-abstract-factory", {method: "get"})
						.then(response => response.json())
						.then((data) => {
							if(data.error) {
								abstractOutput.innerHTML = data.error;
							} else {
								abstractOutput.innerHTML = JSON.stringify(data, undefined, 4);
							}
						})
			});

			dogBuilderButton.addEventListener("click", function() {
				fetch("/api/dog-from-builder", {method: "get"})
						.then(response => response.json())
						.then((data) => {
							if(data.error) {
								builderOutput.innerHTML = data.error;
							} else {
								builderOutput.innerHTML = JSON.stringify(data, undefined, 4);
							}
						})
			});

			catBuilderButton.addEventListener("click", function() {
				fetch("/api/cat-from-builder", {method: "get"})
						.then(response => response.json())
						.then((data) => {
							if(data.error) {
								builderOutput.innerHTML = data.error;
							} else {
								builderOutput.innerHTML = JSON.stringify(data, undefined, 4);
							}
						})
			});


		});
	</script>
{{end}}